import S from "fluent-json-schema";

/*export const WordJp = S.object()
  .title("WordJp")
  .description("definition about wordjp")
  .prop("jp_romanji", S.string())
  .prop("jp_hiragana", S.string())
  .prop("jp_katakana", S.string())
  .prop("jp_kanji", S.string())
  .prop("nb_ro", S.string())
  .prop("nb_hi", S.string())
  .prop("type", S.string())
  .prop("states", S.string())
  .prop("filters", S.string())
  .prop("jp_definition", S.string())
  .prop("jp_refinition_ro", S.string())
  .prop("tense", S.string());*/

  export const WordJp = S.object()
  .title("WordJp")
  .description("definition about wordjp")
  .prop("jp_romanji", S.string())
  .prop("jp_hiragana", S.string())
  .prop("jp_katakana", S.string())
  .prop("jp_kanji", S.string())
  .prop("nb_ro", S.string())
  .prop("nb_hi", S.string())
  .prop("type", S.string())
  .prop("states", S.string())
  .prop("filters", S.string())
  .prop("definition", S.array())
  .prop("tense", S.string());

export const WordFr = S.object()
  .title("WordFr")
  .description("definition about wordfr")
  .prop("french", S.string())
  .prop("fr_explication", S.string())
  .prop("fr_definition", S.string())
  .prop("blue_world", S.string());

export const Kanji = S.object()
  .title("Kanji")
  .description("definition about kanji")
  .prop("jlpt", S.integer())
  .prop("kanji", S.string())
  .prop("nb_strokes", S.integer())
  .prop("on", S.string())
  .prop("on_ka", S.string())
  .prop("on_ro", S.string())
  .prop("kun", S.string())
  .prop("kun_ro", S.string())
  .prop("s_kun", S.string())
  .prop("s_kun_ro", S.string())
  .prop("s_on", S.string())
  .prop("s_on_ka", S.string())
  .prop("s_on_ro", S.string())
  .prop("s_kun_2", S.string())
  .prop("s_kun_ro_2", S.string())
  .prop("s_on_2", S.string())
  .prop("s_on_ka_2", S.string())
  .prop("s_on_ro_2", S.string())
  .prop("s_kun_3", S.string())
  .prop("s_kun_ro_3", S.string());

export const KanjisFr = S.object()
  .title("KanjiFr")
  .description("definition about kanjifr")
  .prop("on_fr", S.string())
  .prop("kun_fr", S.string())
  .prop("s_kun_fr", S.string())
  .prop("s_on_fr", S.string())
  .prop("s_kun_fr_2", S.string())
  .prop("s_on_fr_2", S.string())
  .prop("s_kun_fr_3", S.string());

export const FormVerb = S.object()
  .title("FormVerb")
  .description("tenses of Japanese verb")
  .prop("for_pr", S.string())
  .prop("for_pr_hi", S.string())
  .prop("for_pa", S.string())
  .prop("for_pa_hi", S.string())
  .prop("for_n_pr", S.string())
  .prop("for_n_pr_hi", S.string())
  .prop("for_n_pa", S.string())
  .prop("for_n_pa_hi", S.string())
  .prop("pa", S.string())
  .prop("pa_hi", S.string())
  .prop("n_pr", S.string())
  .prop("n_pr_hi", S.string())
  .prop("n_pa", S.string())
  .prop("n_pa_hi", S.string())
  .prop("te", S.string())
  .prop("te_hi", S.string())
  .prop("n_te", S.string())
  .prop("n_te_hi", S.string())
  .prop("for_potentiel", S.string())
  .prop("for_potentiel_hi", S.string())
  .prop("potentiel", S.string())
  .prop("potentiel_hi", S.string())
  .prop("conjectural_for", S.string())
  .prop("conjectural_for_hi", S.string())
  .prop("conjectural", S.string())
  .prop("conjectural_hi", S.string())
  .prop("imperative", S.string())
  .prop("imperative_hi", S.string())
  .prop("causative", S.string())
  .prop("causative_hi", S.string())
  .prop("volutive", S.string())
  .prop("volutive_hi", S.string())
  .prop("conditionnel", S.string())
  .prop("conditionnel_hi", S.string())
  .prop("conditionnel_pa", S.string())
  .prop("conditionnel_pa_hi", S.string())
  .prop("obligation", S.string())
  .prop("obligation_hi", S.string())
  .prop("for_too", S.string())
  .prop("for_too_hi", S.string())
  .prop("for_too_pa", S.string())
  .prop("for_too_pa_hi", S.string())
  .prop("stem", S.string())
  .prop("stem_hi", S.string())
  .prop("dan: type", S.string())
  .prop("for_passif", S.string())
  .prop("for_passif_hi", S.string())
  .prop("passif", S.string())
  .prop("passif_hi", S.string());

export const FormAdj = S.object()
  .title("FormAdj")
  .description("tenses of Japanese adjective")
  .prop("for_pr", S.string())
  .prop("for_pr_hi", S.string())
  .prop("for_pa", S.string())
  .prop("for_pa_hi", S.string())
  .prop("for_n_pr", S.string())
  .prop("for_n_pr_hi", S.string())
  .prop("for_n_pa", S.string())
  .prop("for_n_pa_hi", S.string())
  .prop("pa", S.string())
  .prop("pa_hi", S.string())
  .prop("n_pr", S.string())
  .prop("n_pr_hi", S.string())
  .prop("n_pa", S.string())
  .prop("n_pa_hi", S.string())
  .prop("te", S.string())
  .prop("te_hi", S.string())
  .prop("n_te", S.string())
  .prop("n_te_hi", S.string())
  .prop("intentionnelle", S.string())
  .prop("intentionnelle_hi", S.string())
  .prop("conditionnel", S.string())
  .prop("conditionnel_hi", S.string())
  .prop("conditionnel_pa", S.string())
  .prop("conditionnel_pa_hi", S.string())
  .prop("type", S.string());

export const Word = S.object().prop("WordJp", WordJp)
                              .prop("WordFr", WordFr)
                              .prop("Commentaries",S.array());

export const Kanjis = S.object().prop("Kanji", Kanji).prop("KanjiFr", KanjisFr);

export const innerAskedDefinition = S.object().prop("Word", Word).prop("tenseVerbs",FormVerb).prop("tenseAdjs",FormAdj);

export const listKanjis = S.object().prop("Kanjis",S.array().additionalItems(Kanjis));

export const listSearch = S.array().additionalItems(innerAskedDefinition,listKanjis);